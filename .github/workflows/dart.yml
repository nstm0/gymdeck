# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      - name: Build executables
        run: dart compile exe bin/gymdeck.dart -o bin/gymdeck && dart compile exe bin/reloadSettings.dart -o bin/reloadSettings && dart compile exe bin/startExperimental.dart -o bin/startExperimental

      - name: Make chmod
        run: chmod +x bin/ryzenadj && chmod +x assets/install.sh

      - name: Copy release files
        run: mkdir -p release/bin && mkdir release/assets && cp bin/gymdeck bin/libsysres-x86_64.so bin/ryzenadj bin/settings.yaml bin/reloadSettings bin/startExperimental release/bin/ && cp assets/install.sh release/ && cp assets/gymdeck.service release/assets/

      - name: Compress release archive
        run: zip -ur release/linux-x86_64.zip release/*

      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v4.0.0
        with:
          github_token: ${{ secrets.RELEASE_TOKEN }}
          tag_prefix: 'v'
          tag_template: 'yyyy.mm.dd.i'

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "release/linux-x86_64.zip"
          tag: ${{ steps.generate_release_tag.outputs.next_release_tag }}
          name: Release ${{ steps.generate_release_tag.outputs.next_release_tag }}
          token: ${{ secrets.RELEASE_TOKEN }}

